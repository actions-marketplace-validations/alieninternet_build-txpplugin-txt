# =============================================================================
# build-txpplugin-txt - Build Textpattern plugin as a TXT package GitHub action
# =============================================================================
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# Metadata:
# @author     Ashley Butcher
# @copyright  Copyright (c) 2024 Alien Internet Services
# @license    https://www.gnu.org/licenses/gpl-3.0.html GNU General Public License version 3
# @version    v1
# @link	      https://github.com/alieninternet/build-txpplugin-txt
# =============================================================================

name: Build and Release Plugin
name: 'Build Textpattern Plugin Package'
description: 'Downloads and executes the Textpattern plugin packager to produce a plugin package.'
inputs:
  folder:
    description: 'Folder containing the plugin files (should include manifest.json)'
    required: false
    default: '.'
  package_filename:
    description: 'Optional package filename. If not provided, defaults to <plugin name>_v<version>.txt (version from manifest.json with dots replaced by underscores)'
    required: false
  dry_run:
    description: 'Skip running the packager (for testing purposes)'
    required: false
    default: 'false'
outputs:
  output_file:
    description: 'The generated package filename'
runs:
  using: "composite"
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'

    - name: Get Latest Packager Release Info
      id: get_packager
      run: |
        LATEST_RELEASE=$(gh api repos/alieninternet/ais_txpplugin_packager/releases/latest)
        PHAR_URL=$(echo "$LATEST_RELEASE" | jq -r '.assets[] | select(.name | endswith(".phar")) | .browser_download_url')
        CHECKSUM_URL=$(echo "$LATEST_RELEASE" | jq -r '.assets[] | select(.name | endswith(".sha256sum")) | .browser_download_url')
        echo "PHAR_URL=$PHAR_URL" >> $GITHUB_ENV
        echo "CHECKSUM_URL=$CHECKSUM_URL" >> $GITHUB_ENV
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Temporary Filename
      id: generate_uuid
      run: |
        UUID=$(uuidgen)
        echo "UUID=$UUID" >> $GITHUB_ENV
        PHAR_FILE=ais_txpplugin_package_${UUID}.phar
        CHECKSUM_FILE=ais_txpplugin_package_${UUID}.phar.sha256
        echo "PHAR_FILE=${PHAR_FILE}" >> $GITHUB_ENV
        echo "CHECKSUM_FILE=${CHECKSUM_FILE}" >> $GITHUB_ENV
      shell: bash

    - name: Download Packager PHAR and Checksum
      run: |
        curl -L -o "${{ env.PHAR_FILE }}" "$PHAR_URL"
        curl -L -o "${{ env.CHECKSUM_FILE }}" "$CHECKSUM_URL"

    - name: Verify Packager Integrity
      run: |
        sha256sum -c "${{ env.CHECKSUM_FILE }}"

    - name: Make Packager Executable
      run: chmod +x "${{ env.PHAR_FILE }}"

    - name: Determine Package Filename
      id: determine_filename
      run: |
        if [ -n "${{ inputs.package_filename }}" ]; then
          OUTPUT_FILE="${{ inputs.package_filename }}"
        else
          PACKAGE_NAME=$(jq -r '.name' ${{ inputs.folder }}/manifest.json)
          VERSION=$(jq -r '.version' ${{ inputs.folder }}/manifest.json | sed 's/\\./_/g')
          OUTPUT_FILE="${PACKAGE_NAME}_v${VERSION}.txt"
        fi
        echo "OUTPUT_FILE=${OUTPUT_FILE}" >> $GITHUB_ENV
        echo "::set-output name=output_file::${OUTPUT_FILE}"
      shell: bash

    - name: Run Plugin Packager
      if: ${{ inputs.dry_run != 'true' }}
      run: |
        ./"${{ env.PHAR_FILE }}" package "${{ inputs.folder }}" "${{ env.OUTPUT_FILE }}"
      shell: bash
